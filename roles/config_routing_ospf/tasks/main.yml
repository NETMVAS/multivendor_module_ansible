---
  - name: add ospf instace mikrotik
    routeros_command:
      commands: "{{ mikrotik_config_ospf_instance_add }}"
    when:
      - ansible_network_os == 'routeros'
      - submenu == 'instace'
      - action == 'add'

  - name: remove ospf instace mikrotik
    routeros_command:
      commands: "{{ mikrotik_config_ospf_instance_remove }}"
    when:
      - ansible_network_os == 'routeros'
      - submenu == 'instace'
      - action == 'remove'

  - name: enable ospf instace mikrotik
    routeros_command:
      commands: "{{ mikrotik_ospf_instance_enable }}"
    when:
      - ansible_network_os == 'routeros'
      - submenu == 'instace'
      - action == 'enable'

  - name: disable ospf instace mikrotik
    routeros_command:
      commands: "{{ mikrotik_ospf_instance_disable }}"
    when:
      - ansible_network_os == 'routeros'
      - submenu == 'instace'
      - action == 'disable'

  - name: set ospf instace mikrotik
    routeros_command:
      commands: "{{ mikrotik_ospf_instance_set }}"
    when:
      - ansible_network_os == 'routeros'
      - submenu == 'instace'
      - action == 'set'

  - name: add ospf network mikrotik
    routeros_command:
      commands: "{{ mikrotik_config_ospf_network_add }}"
    when:
      - ansible_network_os == 'routeros'
      - submenu == 'network'
      - action == 'add'

  - name: remove ospf network mikrotik
    routeros_command:
      commands: "{{ mikrotik_config_ospf_network_remove }}"
    when:
      - ansible_network_os == 'routeros'
      - submenu == 'network'
      - action == 'remove'

  - name: enable ospf network mikrotik
    routeros_command:
      commands: "{{ mikrotik_config_ospf_network_enable }}"
    when:
      - ansible_network_os == 'routeros'
      - submenu == 'network'
      - action == 'enable'

  - name: disable ospf network mikrotik
    routeros_command:
      commands: "{{ mikrotik_config_ospf_network_disable }}"
    when:
      - ansible_network_os == 'routeros'
      - submenu == 'network'
      - action == 'disable'

  - name: set ospf network mikrotik
    routeros_command:
      commands: "{{ mikrotik_config_ospf_network_set }}"
    when:
      - ansible_network_os == 'routeros'
      - submenu == 'network'
      - action == 'set'


  - name: config ipaddres interface cisco
    raw: "{{ cisco_config }}"
    when: ansible_network_os == 'ios'
