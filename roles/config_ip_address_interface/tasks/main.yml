---
  - name: add ip_address interface mikrotik
    routeros_command:
      commands: "{{ mikrotik_config_add }}"
    when:
      - ansible_network_os == 'routeros'
      - action == 'add'

  - name: remove ip_address interface mikrotik
    routeros_command:
      commands: "{{ mikrotik_config_remove }}"
    when:
      - ansible_network_os == 'routeros'
      - action == 'remove'

  - name: enable ip_address interface mikrotik
    routeros_command:
      commands: "{{ mikrotik_config_enable }}"
    when:
      - ansible_network_os == 'routeros'
      - action == 'enable'

  - name: disable ip_address interface mikrotik
    routeros_command:
      commands: "{{ mikrotik_config_disable }}"
    when:
      - ansible_network_os == 'routeros'
      - action == 'disable'

  - name: set ip_address interface mikrotik
    routeros_command:
      commands: "{{ mikrotik_config_set }}"
    when:
      - ansible_network_os == 'routeros'
      - action == 'set'

  - name: add ip_address interface cisco
    ios_l3_interfaces:
      config: "{{ cisco_config_add }}"
      state: overridden
    when:
      - ansible_network_os == 'ios'
      - action == 'add'

  - name: remove ip_address interface cisco
    ios_l3_interfaces:
      config: "{{ cisco_config_remove }}"
      state: deleted
    when:
      - ansible_network_os == 'ios'
      - action == 'remove'

  - name: add ip_address interface cisco
    ios_l3_interfaces:
      config: "{{ cisco_config_set }}"
      state: replaced
    when:
      - ansible_network_os == 'ios'
      - action == 'set'
